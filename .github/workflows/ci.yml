name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    name: "Format Check"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Install Rust toolchain"
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: "Run cargo fmt"
        run: cargo fmt --all -- --check

  clippy:
    name: "Clippy Linter"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Install Rust toolchain"
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: "Run clippy"
        run: cargo clippy --all-targets -- -D warnings

  test:
    name: "Build & Test"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Install Rust toolchain"
        uses: dtolnay/rust-toolchain@stable

      - name: "Run tests"
        run: cargo test --all --verbose

  msrv:
    name: "MSRV Check (1.65)"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Install Rust 1.65.0"
        uses: dtolnay/rust-toolchain@1.65

      - name: "Check with MSRV"
        run: cargo check --verbose

  miri:
    name: "Miri (Undefined Behavior Check)"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Install Nightly toolchain"
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: miri

      - name: "Run Miri"
        run: cargo miri test

  audit:
    name: "Security Audit"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Run audit check"
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
